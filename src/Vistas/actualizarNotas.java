/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.AlumnoData;
import AccesoADatos.InscripcionData;
import Entidades.Alumno;
import Entidades.Inscripcion;
import Entidades.Materia;
import static java.awt.image.ImageObserver.HEIGHT;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class actualizarNotas extends javax.swing.JInternalFrame {

    AlumnoData AG = new AlumnoData();
    List<Alumno> LA;
    DefaultTableModel modelo = new DefaultTableModel(){
    public boolean isCellEditable(){
    return true;
    }
    };
    InscripcionData insdata = new InscripcionData();
    double notaG=0;

    public actualizarNotas() {
        initComponents();
        try {
            LA = new ArrayList<>(AG.listaralumnos());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error de coneccion", "ERROR", HEIGHT);
            ex.printStackTrace();
        }
        CargarAlumnos();
        CargarTabla();
        borrar();
        jbModifica.setEnabled(false);
    }

    private void CargarAlumnos() {
        for (Alumno a : LA) {
            jcCombo.addItem(a);
        }
    }

    private void CargarTabla() {
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Nota");

        jtTabla.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbModifica = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcCombo = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(500, 500));

        jbModifica.setText("Guardar / Modificar");
        jbModifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificaActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jtTabla);
        jtTabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override

            public void valueChanged(ListSelectionEvent e) {
                // Este código se ejecutará cuando se seleccione una fila en la tabla
                if (!e.getValueIsAdjusting()) { // Evita que se ejecute dos veces por cada selección
                    int filaSeleccionada = jtTabla.getSelectedRow();
                    if (filaSeleccionada != -1) { // Verifica si se ha seleccionado una fila válida
                        jbModifica.setEnabled(true);
                        for (int i = 2; i <= 2; i++) {
                            notaG =(Double) modelo.getValueAt(filaSeleccionada, i);

                        }

                    }
                }
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Cargar Notas");

        jLabel2.setText("Seleccione un Alumno :");

        jcCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jcCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jbModifica)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2))))
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jbModifica))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcComboActionPerformed
        // TODO add your handling code here:
        borrar();
        Alumno alu = (Alumno) jcCombo.getSelectedItem();
        ArrayList<Inscripcion> listains = new ArrayList<Inscripcion>();
        List<Materia> listaMateria = insdata.obtenerMateriasCursadas(alu.getIdAlumno());
        listains = (ArrayList) insdata.obtenerInscripcionesPorAlumno(alu.getIdAlumno());
        

        for (Inscripcion mat : listains) {
            modelo.addRow(new Object[]{mat.getMateria().getIdMateria(),mat.getMateria().getNombre(),mat.getNota()
            });       
            }
    }//GEN-LAST:event_jcComboActionPerformed

    private void jbModificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificaActionPerformed
        // guardar
        System.out.println(notaG);
         Alumno alu = (Alumno) jcCombo.getSelectedItem();
        jtTabla.getSelectedRow();
        
        insdata.actualizarNota(alu.getIdAlumno(), WIDTH, notaG);
        
        
        
        
        
        
        
        
//        jtTabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
//            @Override
//
//            public void valueChanged(ListSelectionEvent e) {
//                // Este código se ejecutará cuando se seleccione una fila en la tabla
//                if (!e.getValueIsAdjusting()) { // Evita que se ejecute dos veces por cada selección
//                    int filaSeleccionada = jtTabla.getSelectedRow();
//                    if (filaSeleccionada != -1) { // Verifica si se ha seleccionado una fila válida
//                      jbModifica.setEnabled(true);
//                        for (int i = 2; i <= 2; i++) {
//                           notaG =(Double) modelo.getValueAt(filaSeleccionada, i);
//                            
//
//                        }
//
//                    }
//                }
//            }
//        });

        
        
        
        
    }//GEN-LAST:event_jbModificaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // salir
        
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbModifica;
    private javax.swing.JComboBox<Alumno> jcCombo;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables
private void borrar() {
        int filas = modelo.getRowCount() - 1;
        for (int i = filas; i >= 0; i--) {
            modelo.removeRow(i);

        }

    }

}
